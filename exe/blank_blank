#!/usr/bin/env ruby

require "tmpdir"
require "optparse"
require "blank_blank"
require 'git'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: blank_blank [options] path_to_repository"
  opts.on("-h", "--help", "Prints this help") do
    puts opts
    exit
  end
end.parse!

@errors = 0

ARGV.each do |repo|
  $stderr.puts "#{repo}"

  Dir.mktmpdir do |dir|
    Dir.chdir(dir) do
      $stderr.puts `git clone #{repo} repo 2>&1`

      Dir.chdir('repo') do
        g = Git.open(Dir.pwd)
        g.tags.sort_by(&:name).each do |tag|
          g.checkout(tag)

          Dir.glob('*.gemspec') do |gemspec|
            gem_build_output = `gem build #{gemspec} -f 2>&1`

            gem_name = gem_build_output.scan(/Name: (.*)/).flatten.first
            gem_version = gem_build_output.scan(/Version: (.*)/).flatten.first
            gem_file = gem_build_output.scan(/File: (.*)/).flatten.first

            begin
              fail "Unexpected gem output: #{gem_build_output}" if gem_name.nil? || gem_version.nil?

              output = ""
              output += `gem unpack #{gem_name} -v #{gem_version} --target #{dir}/#{gem_name}-#{gem_version}-rubygems 2>&1`
              output += `gem unpack #{gem_file} --target #{dir}/#{gem_name}-#{gem_version}-newly-built 2>&1`

              output +=  `diff -r #{dir}/#{gem_name}-#{gem_version}-rubygems #{dir}/#{gem_name}-#{gem_version}-newly-built`
              fail output unless $? == 0

              puts "#{gem_name} #{gem_version}: [ OK ]"
            rescue => e
              @errors += 1
              puts "#{gem_name} #{gem_version}: [ FAIL ]"
              puts e.message
            end
          end
        end
      end
    end
  end
end

exit 1 if @errors > 0
