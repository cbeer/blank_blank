#!/usr/bin/env ruby

require "tmpdir"
require "optparse"
require "blank_blank"
require 'fileutils'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: blank_blank [options] path_to_repository"
  opts.on("-h", "--help", "Prints this help") do
    puts opts
    exit
  end
end.parse!

@errors = 0

ARGV.each do |repo|
  repository = BlankBlank::GitRepository.new(repo)

  repository.within_temporary_clone do |repository|
    repository.tags.sort_by(&:name).each do |tag|
      repository.checkout(tag)

      repository.chdir do
        Dir.glob('*.gemspec') do |gemspec|
          dir = Dir.mktmpdir

          gem_build_output = `gem build #{gemspec} -f 2>&1`
          data = gem_build_output.scan(/\s+(.*):\s+(.*)/).to_h.merge(output: gem_build_output)

          begin
            fail "Unexpected gem output: #{data[:output]}" if data['Name'].nil? || data['Version'].nil?

            output = ""
            output += `gem unpack #{data['Name']} -v #{data['Version']} --target #{dir}/#{data['Name']}-#{data['Version']}-rubygems 2>&1` 
            output += `gem unpack #{repository.dir}/#{data['File']} --target #{dir}/#{data['Name']}-#{data['Version']}-newly-built 2>&1`

            output +=  `diff -r #{dir}/#{data['Name']}-#{data['Version']}-rubygems #{dir}/#{data['Name']}-#{data['Version']}-newly-built`
            fail output unless $? == 0

            puts "#{data['Name']} #{data['Version']}: [ OK ]"
          rescue => e
            @errors += 1
            puts "#{data['Name']} #{data['Version']}: [ FAIL ]"
            puts e.message
          ensure
            FileUtils.remove_entry dir
          end
        end
      end
    end
  end
end

exit 1 if @errors > 0
